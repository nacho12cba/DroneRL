# 1 "/home/puriqgpu/DroneRl-workspace/tensorflow-neuroflight/tensorflow/compiler/xla/executable_run_options.cc"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/home/puriqgpu/DroneRl-workspace/tensorflow-neuroflight/tensorflow/compiler/xla/executable_run_options.cc"
# 16 "/home/puriqgpu/DroneRl-workspace/tensorflow-neuroflight/tensorflow/compiler/xla/executable_run_options.cc"
# 1 "/home/puriqgpu/DroneRl-workspace/tensorflow-neuroflight/tensorflow/compiler/xla/executable_run_options.h" 1
# 23 "/home/puriqgpu/DroneRl-workspace/tensorflow-neuroflight/tensorflow/compiler/xla/executable_run_options.h"
namespace perftools {
namespace gputools {
class Stream;
class Platform;
}
}

namespace tensorflow {
namespace thread {
class ThreadPool;
}
}

namespace Eigen {
struct ThreadPoolDevice;
}

namespace xla {

class DeviceMemoryAllocator;
class DeviceAssignment;
class ExecutionProfile;


class ExecutableRunOptions {
 public:

  ExecutableRunOptions& set_allocator(DeviceMemoryAllocator* allocator);
  DeviceMemoryAllocator* allocator() const;






  ExecutableRunOptions& set_device_ordinal(int device_ordinal);
  int device_ordinal() const;




  ExecutableRunOptions& set_stream(perftools::gputools::Stream* stream);
  perftools::gputools::Stream* stream() const;



  ExecutableRunOptions& set_inter_op_thread_pool(
      tensorflow::thread::ThreadPool* inter_op_thread_pool);
  tensorflow::thread::ThreadPool* inter_op_thread_pool() const;



  ExecutableRunOptions& set_intra_op_thread_pool(
      const Eigen::ThreadPoolDevice* intra_op_thread_pool);
  const Eigen::ThreadPoolDevice* intra_op_thread_pool() const;


  ExecutionProfile* execution_profile() const;
  ExecutableRunOptions& set_execution_profile(ExecutionProfile* profile);

  ExecutableRunOptions& set_device_assignment(
      DeviceAssignment* device_assignment);
  const DeviceAssignment* device_assignment() const;

  ExecutableRunOptions& set_rng_seed(int rng_seed);
  int rng_seed() const;

 private:
  DeviceMemoryAllocator* allocator_ = nullptr;
  int device_ordinal_ = -1;
  DeviceAssignment* device_assignment_ = nullptr;
  perftools::gputools::Stream* stream_ = nullptr;
  tensorflow::thread::ThreadPool* inter_op_thread_pool_ = nullptr;
  const Eigen::ThreadPoolDevice* intra_op_thread_pool_ = nullptr;
  ExecutionProfile* execution_profile_ = nullptr;
  int rng_seed_ = 0;
};

}
# 17 "/home/puriqgpu/DroneRl-workspace/tensorflow-neuroflight/tensorflow/compiler/xla/executable_run_options.cc" 2

namespace xla {

ExecutableRunOptions& ExecutableRunOptions::set_device_ordinal(
    int device_ordinal) {
  device_ordinal_ = device_ordinal;
  return *this;
}

int ExecutableRunOptions::device_ordinal() const { return device_ordinal_; }

ExecutableRunOptions& ExecutableRunOptions::set_allocator(
    DeviceMemoryAllocator* allocator) {
  allocator_ = allocator;
  return *this;
}

DeviceMemoryAllocator* ExecutableRunOptions::allocator() const {
  return allocator_;
}

ExecutableRunOptions& ExecutableRunOptions::set_stream(
    perftools::gputools::Stream* stream) {
  stream_ = stream;
  return *this;
}

perftools::gputools::Stream* ExecutableRunOptions::stream() const {
  return stream_;
}

ExecutableRunOptions& ExecutableRunOptions::set_inter_op_thread_pool(
    tensorflow::thread::ThreadPool* inter_op_thread_pool) {
  inter_op_thread_pool_ = inter_op_thread_pool;
  return *this;
}

tensorflow::thread::ThreadPool* ExecutableRunOptions::inter_op_thread_pool()
    const {
  return inter_op_thread_pool_;
}

ExecutableRunOptions& ExecutableRunOptions::set_intra_op_thread_pool(
    const Eigen::ThreadPoolDevice* intra_op_thread_pool) {
  intra_op_thread_pool_ = intra_op_thread_pool;
  return *this;
}

const Eigen::ThreadPoolDevice* ExecutableRunOptions::intra_op_thread_pool()
    const {
  return intra_op_thread_pool_;
}

ExecutableRunOptions& ExecutableRunOptions::set_execution_profile(
    ExecutionProfile* profile) {
  execution_profile_ = profile;
  return *this;
}

ExecutionProfile* ExecutableRunOptions::execution_profile() const {
  return execution_profile_;
}

ExecutableRunOptions& ExecutableRunOptions::set_device_assignment(
    DeviceAssignment* device_assignment) {
  device_assignment_ = device_assignment;
  return *this;
}

const DeviceAssignment* ExecutableRunOptions::device_assignment() const {
  return device_assignment_;
}

ExecutableRunOptions& ExecutableRunOptions::set_rng_seed(int rng_seed) {
  rng_seed_ = rng_seed;
  return *this;
}

int ExecutableRunOptions::rng_seed() const { return rng_seed_; }

}
