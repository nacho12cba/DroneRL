// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Action.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Action.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gymfc {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* Action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Action_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Action_WorldControl_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Action_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Action_2eproto() {
  protobuf_AddDesc_Action_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Action.proto");
  GOOGLE_CHECK(file != NULL);
  Action_descriptor_ = file->message_type(0);
  static const int Action_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, motor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, world_control_),
  };
  Action_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Action_descriptor_,
      Action::default_instance_,
      Action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _has_bits_[0]),
      -1,
      -1,
      sizeof(Action),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _internal_metadata_),
      -1);
  Action_WorldControl_descriptor_ = Action_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Action_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Action_descriptor_, &Action::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Action_2eproto() {
  delete Action::default_instance_;
  delete Action_reflection_;
}

void protobuf_AddDesc_Action_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_Action_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014Action.proto\022\ngymfc.msgs\"~\n\006Action\022\021\n\005"
    "motor\030\001 \003(\002B\002\020\001\022<\n\rworld_control\030\002 \001(\0162\037"
    ".gymfc.msgs.Action.WorldControl:\004STEP\"#\n"
    "\014WorldControl\022\010\n\004STEP\020\000\022\t\n\005RESET\020\001", 154);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Action.proto", &protobuf_RegisterTypes);
  Action::default_instance_ = new Action();
  Action::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Action_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Action_2eproto {
  StaticDescriptorInitializer_Action_2eproto() {
    protobuf_AddDesc_Action_2eproto();
  }
} static_descriptor_initializer_Action_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Action_WorldControl_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_WorldControl_descriptor_;
}
bool Action_WorldControl_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Action_WorldControl Action::STEP;
const Action_WorldControl Action::RESET;
const Action_WorldControl Action::WorldControl_MIN;
const Action_WorldControl Action::WorldControl_MAX;
const int Action::WorldControl_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action::kMotorFieldNumber;
const int Action::kWorldControlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action::Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gymfc.msgs.Action)
}

void Action::InitAsDefaultInstance() {
}

Action::Action(const Action& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gymfc.msgs.Action)
}

void Action::SharedCtor() {
  _cached_size_ = 0;
  world_control_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:gymfc.msgs.Action)
  SharedDtor();
}

void Action::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_descriptor_;
}

const Action& Action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Action_2eproto();
  return *default_instance_;
}

Action* Action::default_instance_ = NULL;

Action* Action::New(::google::protobuf::Arena* arena) const {
  Action* n = new Action;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:gymfc.msgs.Action)
  world_control_ = 0;
  motor_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gymfc.msgs.Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float motor = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_motor())));
        } else if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10, input, this->mutable_motor())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_world_control;
        break;
      }

      // optional .gymfc.msgs.Action.WorldControl world_control = 2 [default = STEP];
      case 2: {
        if (tag == 16) {
         parse_world_control:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::gymfc::msgs::Action_WorldControl_IsValid(value)) {
            set_world_control(static_cast< ::gymfc::msgs::Action_WorldControl >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gymfc.msgs.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gymfc.msgs.Action)
  return false;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gymfc.msgs.Action)
  // repeated float motor = 1 [packed = true];
  if (this->motor_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_motor_cached_byte_size_);
  }
  for (int i = 0; i < this->motor_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->motor(i), output);
  }

  // optional .gymfc.msgs.Action.WorldControl world_control = 2 [default = STEP];
  if (has_world_control()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->world_control(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gymfc.msgs.Action)
}

::google::protobuf::uint8* Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gymfc.msgs.Action)
  // repeated float motor = 1 [packed = true];
  if (this->motor_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _motor_cached_byte_size_, target);
  }
  for (int i = 0; i < this->motor_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->motor(i), target);
  }

  // optional .gymfc.msgs.Action.WorldControl world_control = 2 [default = STEP];
  if (has_world_control()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->world_control(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gymfc.msgs.Action)
  return target;
}

int Action::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gymfc.msgs.Action)
  int total_size = 0;

  // optional .gymfc.msgs.Action.WorldControl world_control = 2 [default = STEP];
  if (has_world_control()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->world_control());
  }

  // repeated float motor = 1 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->motor_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _motor_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gymfc.msgs.Action)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Action* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gymfc.msgs.Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gymfc.msgs.Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gymfc.msgs.Action)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  motor_.MergeFrom(from.motor_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_world_control()) {
      set_world_control(from.world_control());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gymfc.msgs.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gymfc.msgs.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {

  return true;
}

void Action::Swap(Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Action::InternalSwap(Action* other) {
  motor_.UnsafeArenaSwap(&other->motor_);
  std::swap(world_control_, other->world_control_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Action_descriptor_;
  metadata.reflection = Action_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Action

// repeated float motor = 1 [packed = true];
int Action::motor_size() const {
  return motor_.size();
}
void Action::clear_motor() {
  motor_.Clear();
}
 float Action::motor(int index) const {
  // @@protoc_insertion_point(field_get:gymfc.msgs.Action.motor)
  return motor_.Get(index);
}
 void Action::set_motor(int index, float value) {
  motor_.Set(index, value);
  // @@protoc_insertion_point(field_set:gymfc.msgs.Action.motor)
}
 void Action::add_motor(float value) {
  motor_.Add(value);
  // @@protoc_insertion_point(field_add:gymfc.msgs.Action.motor)
}
 const ::google::protobuf::RepeatedField< float >&
Action::motor() const {
  // @@protoc_insertion_point(field_list:gymfc.msgs.Action.motor)
  return motor_;
}
 ::google::protobuf::RepeatedField< float >*
Action::mutable_motor() {
  // @@protoc_insertion_point(field_mutable_list:gymfc.msgs.Action.motor)
  return &motor_;
}

// optional .gymfc.msgs.Action.WorldControl world_control = 2 [default = STEP];
bool Action::has_world_control() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Action::set_has_world_control() {
  _has_bits_[0] |= 0x00000002u;
}
void Action::clear_has_world_control() {
  _has_bits_[0] &= ~0x00000002u;
}
void Action::clear_world_control() {
  world_control_ = 0;
  clear_has_world_control();
}
 ::gymfc::msgs::Action_WorldControl Action::world_control() const {
  // @@protoc_insertion_point(field_get:gymfc.msgs.Action.world_control)
  return static_cast< ::gymfc::msgs::Action_WorldControl >(world_control_);
}
 void Action::set_world_control(::gymfc::msgs::Action_WorldControl value) {
  assert(::gymfc::msgs::Action_WorldControl_IsValid(value));
  set_has_world_control();
  world_control_ = value;
  // @@protoc_insertion_point(field_set:gymfc.msgs.Action.world_control)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gymfc

// @@protoc_insertion_point(global_scope)
