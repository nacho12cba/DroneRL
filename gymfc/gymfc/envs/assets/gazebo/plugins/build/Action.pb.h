// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Action.proto

#ifndef PROTOBUF_Action_2eproto__INCLUDED
#define PROTOBUF_Action_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gymfc {
namespace msgs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Action_2eproto();
void protobuf_AssignDesc_Action_2eproto();
void protobuf_ShutdownFile_Action_2eproto();

class Action;

enum Action_WorldControl {
  Action_WorldControl_STEP = 0,
  Action_WorldControl_RESET = 1
};
bool Action_WorldControl_IsValid(int value);
const Action_WorldControl Action_WorldControl_WorldControl_MIN = Action_WorldControl_STEP;
const Action_WorldControl Action_WorldControl_WorldControl_MAX = Action_WorldControl_RESET;
const int Action_WorldControl_WorldControl_ARRAYSIZE = Action_WorldControl_WorldControl_MAX + 1;

const ::google::protobuf::EnumDescriptor* Action_WorldControl_descriptor();
inline const ::std::string& Action_WorldControl_Name(Action_WorldControl value) {
  return ::google::protobuf::internal::NameOfEnum(
    Action_WorldControl_descriptor(), value);
}
inline bool Action_WorldControl_Parse(
    const ::std::string& name, Action_WorldControl* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Action_WorldControl>(
    Action_WorldControl_descriptor(), name, value);
}
// ===================================================================

class Action : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gymfc.msgs.Action) */ {
 public:
  Action();
  virtual ~Action();

  Action(const Action& from);

  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action& default_instance();

  void Swap(Action* other);

  // implements Message ----------------------------------------------

  inline Action* New() const { return New(NULL); }

  Action* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action& from);
  void MergeFrom(const Action& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Action* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Action_WorldControl WorldControl;
  static const WorldControl STEP =
    Action_WorldControl_STEP;
  static const WorldControl RESET =
    Action_WorldControl_RESET;
  static inline bool WorldControl_IsValid(int value) {
    return Action_WorldControl_IsValid(value);
  }
  static const WorldControl WorldControl_MIN =
    Action_WorldControl_WorldControl_MIN;
  static const WorldControl WorldControl_MAX =
    Action_WorldControl_WorldControl_MAX;
  static const int WorldControl_ARRAYSIZE =
    Action_WorldControl_WorldControl_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  WorldControl_descriptor() {
    return Action_WorldControl_descriptor();
  }
  static inline const ::std::string& WorldControl_Name(WorldControl value) {
    return Action_WorldControl_Name(value);
  }
  static inline bool WorldControl_Parse(const ::std::string& name,
      WorldControl* value) {
    return Action_WorldControl_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated float motor = 1 [packed = true];
  int motor_size() const;
  void clear_motor();
  static const int kMotorFieldNumber = 1;
  float motor(int index) const;
  void set_motor(int index, float value);
  void add_motor(float value);
  const ::google::protobuf::RepeatedField< float >&
      motor() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_motor();

  // optional .gymfc.msgs.Action.WorldControl world_control = 2 [default = STEP];
  bool has_world_control() const;
  void clear_world_control();
  static const int kWorldControlFieldNumber = 2;
  ::gymfc::msgs::Action_WorldControl world_control() const;
  void set_world_control(::gymfc::msgs::Action_WorldControl value);

  // @@protoc_insertion_point(class_scope:gymfc.msgs.Action)
 private:
  inline void set_has_world_control();
  inline void clear_has_world_control();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > motor_;
  mutable int _motor_cached_byte_size_;
  int world_control_;
  friend void  protobuf_AddDesc_Action_2eproto();
  friend void protobuf_AssignDesc_Action_2eproto();
  friend void protobuf_ShutdownFile_Action_2eproto();

  void InitAsDefaultInstance();
  static Action* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Action

// repeated float motor = 1 [packed = true];
inline int Action::motor_size() const {
  return motor_.size();
}
inline void Action::clear_motor() {
  motor_.Clear();
}
inline float Action::motor(int index) const {
  // @@protoc_insertion_point(field_get:gymfc.msgs.Action.motor)
  return motor_.Get(index);
}
inline void Action::set_motor(int index, float value) {
  motor_.Set(index, value);
  // @@protoc_insertion_point(field_set:gymfc.msgs.Action.motor)
}
inline void Action::add_motor(float value) {
  motor_.Add(value);
  // @@protoc_insertion_point(field_add:gymfc.msgs.Action.motor)
}
inline const ::google::protobuf::RepeatedField< float >&
Action::motor() const {
  // @@protoc_insertion_point(field_list:gymfc.msgs.Action.motor)
  return motor_;
}
inline ::google::protobuf::RepeatedField< float >*
Action::mutable_motor() {
  // @@protoc_insertion_point(field_mutable_list:gymfc.msgs.Action.motor)
  return &motor_;
}

// optional .gymfc.msgs.Action.WorldControl world_control = 2 [default = STEP];
inline bool Action::has_world_control() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Action::set_has_world_control() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Action::clear_has_world_control() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Action::clear_world_control() {
  world_control_ = 0;
  clear_has_world_control();
}
inline ::gymfc::msgs::Action_WorldControl Action::world_control() const {
  // @@protoc_insertion_point(field_get:gymfc.msgs.Action.world_control)
  return static_cast< ::gymfc::msgs::Action_WorldControl >(world_control_);
}
inline void Action::set_world_control(::gymfc::msgs::Action_WorldControl value) {
  assert(::gymfc::msgs::Action_WorldControl_IsValid(value));
  set_has_world_control();
  world_control_ = value;
  // @@protoc_insertion_point(field_set:gymfc.msgs.Action.world_control)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gymfc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::gymfc::msgs::Action_WorldControl> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gymfc::msgs::Action_WorldControl>() {
  return ::gymfc::msgs::Action_WorldControl_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Action_2eproto__INCLUDED
